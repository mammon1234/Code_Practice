/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        if(headA == null || headB == null){
            return null;
        }
        int len1 = length(headA);
        int len2 = length(headB);
        if(len1> len2){
            for(int i=0;i<len1-len2;i++){
                headA = headA.next;
            }
        }
        if(len1<len2){
            for(int i=0;i<len2-len1;i++){
                headB = headB.next;
            }
        }
        while(headA != null){
            if(headA.val == headB.val){
                return headA;
            }
            headA=headA.next;
            headB=headB.next;
        }
        return headA;
    }
    private int length(ListNode head){
        int len = 0;
        while(head != null){
            len++;
            head =head.next;
        }
        return len;
    }
}
