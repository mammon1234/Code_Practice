/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    int preStart = 0;
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        if(preorder.length == 0 || inorder.length == 0 || preorder.length != inorder.length){
            return null;
        }
        return helper(preorder, inorder, 0 , inorder.length-1);
    }
    private TreeNode helper(int[] preorder, int[] inorder, int inStart, int inEnd){
        if(preStart >= preorder.length || inStart > inEnd){
            return null;
        }
        int index = 0;
        for(int i = inStart; i<= inEnd; i++){
            if(inorder[i] == preorder[preStart]){
                index = i;
                break;
            }
        }
        TreeNode root = new TreeNode(preorder[preStart++]);
        root.left = helper(preorder,inorder,inStart,index-1);
        root.right =helper(preorder,inorder,index+1, inEnd);
        return root;
    }
}
