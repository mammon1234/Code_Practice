public class Solution {
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans = new ArrayList<List<Integer>>();
        if( nums == null || nums.length == 0){
            return ans;
        }
        List<Integer> list = new ArrayList<Integer>();
        permutedfs( ans, list, nums);
        return ans;
    }
    private void permutedfs( List<List<Integer>> ans, List<Integer> list, int [] nums){
        if( list.size() == nums.length){
            ans.add( new ArrayList<Integer>(list));
            return;
        }
        for( int i = 0; i < nums.length; i ++ ){
            if( list.contains(nums[i])){
                continue;
            }
            list.add(nums[i]);
            permutedfs( ans, list, nums);
            list.remove(list.size()-1);
        }
    }
}
