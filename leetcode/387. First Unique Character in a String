public class Solution {
    public int firstUniqChar(String s) {
        if(s == null || s.length() == 0){
            return -1;
        }
        int[] index = new int[128];
        int len = s.length();
        int uni = 0;
        for (int i = 0; i < len; i++){
            char temp=s.charAt(i);
            int ascii = (int) temp;
            if(index[ascii]==0){
                index[ascii] = 1;
            }else if(index[ascii] == 1){
                index[ascii]=-1;
            }
        }
        for (int i = 0; i < len; i++){
            char temp=s.charAt(i);
            int ascii = (int) temp;
            if(index[ascii] == 1){
                return i;
            }
        }
        return -1;
    }
}


public class Solution {
    public int firstUniqChar(String s) {
        if(s == null || s.length() == 0) return -1;
        if(s.length() ==1) return 0;
        HashMap<Character,Integer> map = new HashMap<Character,Integer>();
        int slow =0;
        int fast =1;
        map.put(s.charAt(slow),1);
        while(fast<s.length()){
            char curt = s.charAt(fast);
            if(map.containsKey(curt)){
                map.put(curt,map.get(curt)+1);
            }else{
                map.put(curt,1);
            }
            if(s.charAt(slow)==curt){
                while(slow <s.length() && map.containsKey(s.charAt(slow))&&map.get(s.charAt(slow))>1){
                    slow++;
                }
            }
            if(slow >fast){
                fast =slow;
            }else{
                fast++;
            }
        }
        return slow<s.length()?slow:-1;
    }
}
