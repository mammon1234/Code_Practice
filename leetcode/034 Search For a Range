public class Solution {
    public int[] searchRange(int[] nums, int target) {
        int [] bound = new int[]{-1, -1};
        if( nums == null || nums.length == 0){
            return bound;
        }
        int start, mid, end;
        // find the left bound
        start = 0; end = nums.length-1;
        while( start + 1 < end){
            mid = start + ( end - start ) / 2;
            if( nums[mid] >= target){
                end = mid;
            }else{
                start = mid;
            }
        }
        if( nums[start] == target ){
            bound[0] = start;
        }else if( nums[end] == target ){
            bound[0] = end;
        }else{
            return bound;
        }
        // find the right bound
        start = 0; end = nums.length-1;
        while( start + 1 < end){
            mid = start + ( end - start ) / 2;
            if( nums[mid] <= target){
                start = mid;
            }else{
                end = mid;
            }
        }
        if( nums[end] == target ){
            bound[1] = end;
        }else if( nums[start] == target ){
            bound[1] = start;
        }
        return bound;
    }
}
