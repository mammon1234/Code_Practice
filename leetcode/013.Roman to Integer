public class Solution {
    public int romanToInt(String s) {
        if(s == null || s.length() ==0){
            return 0;
        }
        char[] nums = s.toCharArray();
        int sum=0,pre=0,cur=0;
        for(int i =0; i< nums.length;i++){
            cur=numChange(nums[i]);
            if(pre < cur){
                sum=sum+cur-2*pre;
            }else{
                sum=sum+cur;
            }
            pre =cur;
        }
        return sum;
    }
    private int numChange(char num){
        int ans = 0;
        switch(num){
            case 'I':
                ans =1;
                break;
            case 'V':
                ans = 5;
                break;
            case 'X':
                ans= 10;
                break;
            case 'L':
                ans = 50;
                break;
            case 'C':
                ans = 100;
                break;
            case 'D':
                ans = 500;
                break;
            case 'M':
                ans = 1000;
                break;
            default:
                break;
        }
        return ans;
    }
}
//用hash表
public class Solution {
    public int romanToInt(String s) {
        if(s == null || s.length() ==0){
            return 0;
        }
        HashMap<Character,Integer> map = new HashMap<Character, Integer>();
        map.put('M',1000);
        map.put('D',500);
        map.put('C',100);
        map.put('L',50);
        map.put('X',10);
        map.put('V',5);  
        map.put('I',1);
        char[] nums = s.toCharArray();
        int sum=0,pre=0,cur=0;
        for(int i =0; i< s.length();i++){
            cur=map.get(s.charAt(i));
            if(pre < cur){
                sum=sum+cur-2*pre;
            }else{
                sum=sum+cur;
            }
            pre =cur;
        }
        return sum;
    }
}
