//通过两个字符串排列来确定是否一致
boolean checkPermutation(String source, String target){
  if(source.length() != target.length()){
  return false;
  }
  return sort(source).equals(sort(target));
}
void sort(String str){
  char[] temp = str.toCharArray();
  Arrays.sort(temp);
  return new String(temp);
}

// 通过int[256]字符数组
boolean checkPermutation(String source, String target){
  if(source.length() != target.length()){
    return false;
  }
  int [] dict = new int[256];
  for(int i = 0; i < source.length(); i ++ ){
    dict[(short)str.charAt(i)]++;
  }
  for(int i = 0; i < target.length(); i ++ ){
    if(--dict[(short)str.charAt(i)] < 0){
      return false;
    }
  }
  return true;
}
