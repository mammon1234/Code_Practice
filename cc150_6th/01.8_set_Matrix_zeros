public class Solution {
    public void setZeroes(int[][] matrix) {
        if(matrix == null || matrix.length == 0){
            return;
        }
        int[] rows = new int[matrix.length];
        int[] columns = new int[matrix[0].length];
        for(int i=0; i<matrix.length;i++){
            for(int j=0; j<matrix[0].length;j++){
                if(matrix[i][j] == 0){
                    rows[i]=1;
                    columns[j]=1;
                }
            }
        }
        for(int i=0; i<matrix.length;i++){
            for(int j=0; j<matrix[0].length;j++){
                if(rows[i]==1 ||columns[j] == 1){
                    matrix[i][j]=0;
                }
            }
        }
    }
}
//或者先对matrix[0][j],matrix[i][0]设置0标志位
//再用matrix[0][j],matrix[i][0]当space存剩下的标志位
public void setZeroes(int[][] matrix){
	if(matrix == null || matrix.length == 0) return;
	int rowF =1;
	for(int i=0; i<matrix.length; i++){
		if(matrix[i][0] == 0) rowF=0;
	}
	int colF =1;
	for(int j=0; j<matrix.length; j++){
		if(matrix[0][j] == 0) colF=0;
	}
	
	for(int i=1; i< matrix.length; i++){
		for(int j=1; j<matrix.length;j++){
			if(matrix[i][j] == 0){
				matrix[i][0]=0;
				matrix[0][j]=0;
			}
		}
	}

	for(int i=1; i< matrix.length; i++){
		for(int j=1; j<matrix.length;j++){
			if(matrix[i][0] == 0 || matrix[0][j] == 0){
				matrix[i][j]=0;
			}
		}
	}

	if(rowF ==0){for(int i=0; i<matrix.length; i++){matrix[i][0]=0;}}
	if(colF ==0){for(int j=0; j<matrix.length; j++){matrix[0][j]=0;}}
}
