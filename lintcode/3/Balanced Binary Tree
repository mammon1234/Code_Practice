/**
 * Definition of TreeNode:
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left, right;
 *     public TreeNode(int val) {
 *         this.val = val;
 *         this.left = this.right = null;
 *     }
 * }
 */
public class Solution {
    /**
     * @param root: The root of binary tree.
     * @return: True if this Binary tree is Balanced, or false.
     */
    public boolean isBalanced(TreeNode root) {
        // write your code here
        if(root == null){
            return true;
        }
        if(!isBalanced(root.left) || !isBalanced(root.right)){
            return false;
        }
        if(Math.abs(MaxDepth(root.left)-MaxDepth(root.right)) <= 1){
            return true;
        }
        return false;
        
    }
    private int MaxDepth( TreeNode root){
        if( root == null){
            return 0;
        }
        int left = MaxDepth( root.left);
        int right = MaxDepth(root.right);
        return Math.max(left, right)+1;
    }
}
